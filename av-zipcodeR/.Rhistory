zip_20$ainc_20[i] <- metadata$median_household_income
}
View(zip_20)
test <- which(zip_info == 12345, arr.ind=TRUE)
View(test)
View(zip_info)
test <- which(zip_info == 11373, arr.ind=TRUE)
View(test)
test <- which(zip_info == 11373, arr.ind=TRUE)[1]
test <- which(zip_info == 11373, arr.ind=TRUE)[1][1]
test <- which(zip_info == 11373, arr.ind=TRUE)
View(test)
View(zip_info)
### ART SURVEY GEOGRAPHY INFO APPENDING SCRIPT ###
### MICHAEL HUFF ###
library(zipcodeR)
# Read in all of our data - the survey in its manipulated
# form (prepared stated pref section, dummy variables added,
# ZIP code stuff fixed and centroid points inserted), as well
# as ZIP data for whether or not a certain ZIP code is urban
# or rural. The rest of the ZIP code metadata is supplied by
# the zipcodeR package.
survey <- read.csv("C:/Users/micha/Desktop/dummy-centroids.csv")
zip_info <- read.csv("C:/Users/micha/Desktop/zips_descriptive.csv")
# Pull out our existing ZIP code data.
zip_20 <- data.frame(survey[,21:23])
zip_21 <- data.frame(survey[,24:26])
# Assign more columns to each of these constructed matrices
# according to the ZIP-level metadata available through zipcodeR.
zip_20$st_20 <- NA
zip_20$cnty_20 <- NA
zip_20$city_20 <- NA
zip_20$pop_20 <- NA
zip_20$dens_20 <- NA
zip_20$area_20 <- NA
zip_20$hous_20 <- NA
zip_20$occ_20 <- NA
zip_20$hval_20 <- NA
zip_20$ainc_20 <- NA
zip_20$urban_20 <- NA
zip_21$st_21 <- NA
zip_21$cnty_21 <- NA
zip_21$city_21 <- NA
zip_21$pop_21 <- NA
zip_21$dens_21 <- NA
zip_21$area_21 <- NA
zip_21$hous_21 <- NA
zip_21$occ_21 <- NA
zip_21$hval_21 <- NA
zip_21$ainc_21 <- NA
zip_21$urban_21 <- NA
# Loop through, filling the matrices with the correct metadata for
# each ZIP code and giving us some initial geographical info such as
# state, county, nearest big city, population, pop density, housing
# units, land area, median home value, median income, etc.
for (i in seq(1,2467,1)) {
this_zip <- str_pad(zip_20$survey...20.[i], width = 5, side = 'left', pad = '0')
metadata <- reverse_zipcode(this_zip)
zip_20$st_20[i] <- metadata$state
zip_20$cnty_20[i] <- metadata$county
zip_20$city_20[i] <- metadata$major_city
zip_20$pop_20[i] <- metadata$population
zip_20$dens_20[i] <- metadata$population_density
zip_20$area_20[i] <- metadata$land_area_in_sqmi
zip_20$hous_20[i] <- metadata$housing_units
zip_20$occ_20[i] <- metadata$occupied_housing_units
zip_20$hval_20[i] <- metadata$median_home_value
zip_20$ainc_20[i] <- metadata$median_household_income
# Consult our zip_descriptives sheet to find out whether or
# not this ZIP code resides in an 'urban' area (overlaps with
# any part of the United States' 'urban area' shapefile)
zip_20$urban_20[i] <- zip_info$urban[which(zip_info == this_zip, arr.ind=TRUE)[1,1],]
}
for (i in seq(1,2467,1)) {
this_zip <- str_pad(zip_21$survey...21.[i], width = 5, side = 'left', pad = '0')
metadata <- reverse_zipcode(this_zip)
zip_21$st_21[i] <- metadata$state
zip_21$cnty_21[i] <- metadata$county
zip_21$city_21[i] <- metadata$major_city
zip_21$pop_21[i] <- metadata$population
zip_21$dens_21[i] <- metadata$population_density
zip_21$area_21[i] <- metadata$land_area_in_sqmi
zip_21$hous_21[i] <- metadata$housing_units
zip_21$occ_21[i] <- metadata$occupied_housing_units
zip_21$hval_21[i] <- metadata$median_home_value
zip_21$ainc_21[i] <- metadata$median_household_income
# Consult our zip_descriptives sheet to find out whether or
# not this ZIP code resides in an 'urban' area (overlaps with
# any part of the United States' 'urban area' shapefile)
zip_21$urban_21[i] <- zip_info$urban[which(zip_info == this_zip, arr.ind=TRUE)[1,1],]
}
### ART SURVEY GEOGRAPHY INFO APPENDING SCRIPT ###
### MICHAEL HUFF ###
library(zipcodeR)
# Read in all of our data - the survey in its manipulated
# form (prepared stated pref section, dummy variables added,
# ZIP code stuff fixed and centroid points inserted), as well
# as ZIP data for whether or not a certain ZIP code is urban
# or rural. The rest of the ZIP code metadata is supplied by
# the zipcodeR package.
survey <- read.csv("C:/Users/micha/Desktop/dummy-centroids.csv")
zip_info <- read.csv("C:/Users/micha/Desktop/zips_descriptive.csv")
# Pull out our existing ZIP code data.
zip_20 <- data.frame(survey[,21:23])
zip_21 <- data.frame(survey[,24:26])
# Assign more columns to each of these constructed matrices
# according to the ZIP-level metadata available through zipcodeR.
zip_20$st_20 <- NA
zip_20$cnty_20 <- NA
zip_20$city_20 <- NA
zip_20$pop_20 <- NA
zip_20$dens_20 <- NA
zip_20$area_20 <- NA
zip_20$hous_20 <- NA
zip_20$occ_20 <- NA
zip_20$hval_20 <- NA
zip_20$ainc_20 <- NA
zip_20$urban_20 <- NA
zip_21$st_21 <- NA
zip_21$cnty_21 <- NA
zip_21$city_21 <- NA
zip_21$pop_21 <- NA
zip_21$dens_21 <- NA
zip_21$area_21 <- NA
zip_21$hous_21 <- NA
zip_21$occ_21 <- NA
zip_21$hval_21 <- NA
zip_21$ainc_21 <- NA
zip_21$urban_21 <- NA
# Loop through, filling the matrices with the correct metadata for
# each ZIP code and giving us some initial geographical info such as
# state, county, nearest big city, population, pop density, housing
# units, land area, median home value, median income, etc.
for (i in seq(1,2467,1)) {
this_zip <- str_pad(zip_20$survey...20.[i], width = 5, side = 'left', pad = '0')
metadata <- reverse_zipcode(this_zip)
zip_20$st_20[i] <- metadata$state
zip_20$cnty_20[i] <- metadata$county
zip_20$city_20[i] <- metadata$major_city
zip_20$pop_20[i] <- metadata$population
zip_20$dens_20[i] <- metadata$population_density
zip_20$area_20[i] <- metadata$land_area_in_sqmi
zip_20$hous_20[i] <- metadata$housing_units
zip_20$occ_20[i] <- metadata$occupied_housing_units
zip_20$hval_20[i] <- metadata$median_home_value
zip_20$ainc_20[i] <- metadata$median_household_income
# Consult our zip_descriptives sheet to find out whether or
# not this ZIP code resides in an 'urban' area (overlaps with
# any part of the United States' 'urban area' shapefile)
zip_20$urban_20[i] <- zip_info$urban[which(zip_info == this_zip, arr.ind=TRUE)[1],]
}
for (i in seq(1,2467,1)) {
this_zip <- str_pad(zip_21$survey...21.[i], width = 5, side = 'left', pad = '0')
metadata <- reverse_zipcode(this_zip)
zip_21$st_21[i] <- metadata$state
zip_21$cnty_21[i] <- metadata$county
zip_21$city_21[i] <- metadata$major_city
zip_21$pop_21[i] <- metadata$population
zip_21$dens_21[i] <- metadata$population_density
zip_21$area_21[i] <- metadata$land_area_in_sqmi
zip_21$hous_21[i] <- metadata$housing_units
zip_21$occ_21[i] <- metadata$occupied_housing_units
zip_21$hval_21[i] <- metadata$median_home_value
zip_21$ainc_21[i] <- metadata$median_household_income
# Consult our zip_descriptives sheet to find out whether or
# not this ZIP code resides in an 'urban' area (overlaps with
# any part of the United States' 'urban area' shapefile)
zip_21$urban_21[i] <- zip_info$urban[which(zip_info == this_zip, arr.ind=TRUE)[1],]
}
zip_info$urban[4,]
zip_info$urban[4]
### ART SURVEY GEOGRAPHY INFO APPENDING SCRIPT ###
### MICHAEL HUFF ###
library(zipcodeR)
# Read in all of our data - the survey in its manipulated
# form (prepared stated pref section, dummy variables added,
# ZIP code stuff fixed and centroid points inserted), as well
# as ZIP data for whether or not a certain ZIP code is urban
# or rural. The rest of the ZIP code metadata is supplied by
# the zipcodeR package.
survey <- read.csv("C:/Users/micha/Desktop/dummy-centroids.csv")
zip_info <- read.csv("C:/Users/micha/Desktop/zips_descriptive.csv")
# Pull out our existing ZIP code data.
zip_20 <- data.frame(survey[,21:23])
zip_21 <- data.frame(survey[,24:26])
# Assign more columns to each of these constructed matrices
# according to the ZIP-level metadata available through zipcodeR.
zip_20$st_20 <- NA
zip_20$cnty_20 <- NA
zip_20$city_20 <- NA
zip_20$pop_20 <- NA
zip_20$dens_20 <- NA
zip_20$area_20 <- NA
zip_20$hous_20 <- NA
zip_20$occ_20 <- NA
zip_20$hval_20 <- NA
zip_20$ainc_20 <- NA
zip_20$urban_20 <- NA
zip_21$st_21 <- NA
zip_21$cnty_21 <- NA
zip_21$city_21 <- NA
zip_21$pop_21 <- NA
zip_21$dens_21 <- NA
zip_21$area_21 <- NA
zip_21$hous_21 <- NA
zip_21$occ_21 <- NA
zip_21$hval_21 <- NA
zip_21$ainc_21 <- NA
zip_21$urban_21 <- NA
# Loop through, filling the matrices with the correct metadata for
# each ZIP code and giving us some initial geographical info such as
# state, county, nearest big city, population, pop density, housing
# units, land area, median home value, median income, etc.
for (i in seq(1,2467,1)) {
this_zip <- str_pad(zip_20$survey...20.[i], width = 5, side = 'left', pad = '0')
metadata <- reverse_zipcode(this_zip)
zip_20$st_20[i] <- metadata$state
zip_20$cnty_20[i] <- metadata$county
zip_20$city_20[i] <- metadata$major_city
zip_20$pop_20[i] <- metadata$population
zip_20$dens_20[i] <- metadata$population_density
zip_20$area_20[i] <- metadata$land_area_in_sqmi
zip_20$hous_20[i] <- metadata$housing_units
zip_20$occ_20[i] <- metadata$occupied_housing_units
zip_20$hval_20[i] <- metadata$median_home_value
zip_20$ainc_20[i] <- metadata$median_household_income
# Consult our zip_descriptives sheet to find out whether or
# not this ZIP code resides in an 'urban' area (overlaps with
# any part of the United States' 'urban area' shapefile)
zip_20$urban_20[i] <- zip_info$urban[which(zip_info == this_zip)]
}
for (i in seq(1,2467,1)) {
this_zip <- str_pad(zip_21$survey...21.[i], width = 5, side = 'left', pad = '0')
metadata <- reverse_zipcode(this_zip)
zip_21$st_21[i] <- metadata$state
zip_21$cnty_21[i] <- metadata$county
zip_21$city_21[i] <- metadata$major_city
zip_21$pop_21[i] <- metadata$population
zip_21$dens_21[i] <- metadata$population_density
zip_21$area_21[i] <- metadata$land_area_in_sqmi
zip_21$hous_21[i] <- metadata$housing_units
zip_21$occ_21[i] <- metadata$occupied_housing_units
zip_21$hval_21[i] <- metadata$median_home_value
zip_21$ainc_21[i] <- metadata$median_household_income
# Consult our zip_descriptives sheet to find out whether or
# not this ZIP code resides in an 'urban' area (overlaps with
# any part of the United States' 'urban area' shapefile)
zip_21$urban_21[i] <- zip_info$urban[which(zip_info == this_zip)]
}
View(zip_20)
which(zip_info == 07856)
View(zip_info)
zip_info$zip <- str_pad(zip_info$zip, width = 5, side = 'left', pad = '0')
View(zip_info)
### ART SURVEY GEOGRAPHY INFO APPENDING SCRIPT ###
### MICHAEL HUFF ###
library(zipcodeR)
# Read in all of our data - the survey in its manipulated
# form (prepared stated pref section, dummy variables added,
# ZIP code stuff fixed and centroid points inserted), as well
# as ZIP data for whether or not a certain ZIP code is urban
# or rural. The rest of the ZIP code metadata is supplied by
# the zipcodeR package.
survey <- read.csv("C:/Users/micha/Desktop/dummy-centroids.csv")
zip_info <- read.csv("C:/Users/micha/Desktop/zips_descriptive.csv")
# If we don't do this here too, the comparison operation between
# CSV sheets will not complete.
zip_info$zip <- str_pad(zip_info$zip, width = 5, side = 'left', pad = '0')
# Pull out our existing ZIP code data.
zip_20 <- data.frame(survey[,21:23])
zip_21 <- data.frame(survey[,24:26])
# Assign more columns to each of these constructed matrices
# according to the ZIP-level metadata available through zipcodeR.
zip_20$st_20 <- NA
zip_20$cnty_20 <- NA
zip_20$city_20 <- NA
zip_20$pop_20 <- NA
zip_20$dens_20 <- NA
zip_20$area_20 <- NA
zip_20$hous_20 <- NA
zip_20$occ_20 <- NA
zip_20$hval_20 <- NA
zip_20$ainc_20 <- NA
zip_20$urban_20 <- NA
zip_21$st_21 <- NA
zip_21$cnty_21 <- NA
zip_21$city_21 <- NA
zip_21$pop_21 <- NA
zip_21$dens_21 <- NA
zip_21$area_21 <- NA
zip_21$hous_21 <- NA
zip_21$occ_21 <- NA
zip_21$hval_21 <- NA
zip_21$ainc_21 <- NA
zip_21$urban_21 <- NA
# Loop through, filling the matrices with the correct metadata for
# each ZIP code and giving us some initial geographical info such as
# state, county, nearest big city, population, pop density, housing
# units, land area, median home value, median income, etc.
for (i in seq(1,2467,1)) {
this_zip <- str_pad(zip_20$survey...20.[i], width = 5, side = 'left', pad = '0')
metadata <- reverse_zipcode(this_zip)
zip_20$st_20[i] <- metadata$state
zip_20$cnty_20[i] <- metadata$county
zip_20$city_20[i] <- metadata$major_city
zip_20$pop_20[i] <- metadata$population
zip_20$dens_20[i] <- metadata$population_density
zip_20$area_20[i] <- metadata$land_area_in_sqmi
zip_20$hous_20[i] <- metadata$housing_units
zip_20$occ_20[i] <- metadata$occupied_housing_units
zip_20$hval_20[i] <- metadata$median_home_value
zip_20$ainc_20[i] <- metadata$median_household_income
# Consult our zip_descriptives sheet to find out whether or
# not this ZIP code resides in an 'urban' area (overlaps with
# any part of the United States' 'urban area' shapefile)
zip_20$urban_20[i] <- zip_info$urban[zip_info$zip == this_zip]
}
for (i in seq(1,2467,1)) {
this_zip <- str_pad(zip_21$survey...21.[i], width = 5, side = 'left', pad = '0')
metadata <- reverse_zipcode(this_zip)
zip_21$st_21[i] <- metadata$state
zip_21$cnty_21[i] <- metadata$county
zip_21$city_21[i] <- metadata$major_city
zip_21$pop_21[i] <- metadata$population
zip_21$dens_21[i] <- metadata$population_density
zip_21$area_21[i] <- metadata$land_area_in_sqmi
zip_21$hous_21[i] <- metadata$housing_units
zip_21$occ_21[i] <- metadata$occupied_housing_units
zip_21$hval_21[i] <- metadata$median_home_value
zip_21$ainc_21[i] <- metadata$median_household_income
# Consult our zip_descriptives sheet to find out whether or
# not this ZIP code resides in an 'urban' area (overlaps with
# any part of the United States' 'urban area' shapefile)
zip_21$urban_21[i] <- zip_info$urban[zip_info$zip == this_zip]
}
which(zip_info == 08756)
which(zip_info == 78711)
### ART SURVEY GEOGRAPHY INFO APPENDING SCRIPT ###
### MICHAEL HUFF ###
library(zipcodeR)
# Read in all of our data - the survey in its manipulated
# form (prepared stated pref section, dummy variables added,
# ZIP code stuff fixed and centroid points inserted), as well
# as ZIP data for whether or not a certain ZIP code is urban
# or rural. The rest of the ZIP code metadata is supplied by
# the zipcodeR package.
survey <- read.csv("C:/Users/micha/Desktop/dummy-centroids.csv")
zip_info <- read.csv("C:/Users/micha/Desktop/zips_descriptive.csv")
# If we don't do this here too, the comparison operation between
# CSV sheets will not complete.
zip_info$zip <- str_pad(zip_info$zip, width = 5, side = 'left', pad = '0')
# Pull out our existing ZIP code data.
zip_20 <- data.frame(survey[,21:23])
zip_21 <- data.frame(survey[,24:26])
# Assign more columns to each of these constructed matrices
# according to the ZIP-level metadata available through zipcodeR.
zip_20$st_20 <- NA
zip_20$cnty_20 <- NA
zip_20$city_20 <- NA
zip_20$pop_20 <- NA
zip_20$dens_20 <- NA
zip_20$area_20 <- NA
zip_20$hous_20 <- NA
zip_20$occ_20 <- NA
zip_20$hval_20 <- NA
zip_20$ainc_20 <- NA
zip_20$urban_20 <- NA
zip_21$st_21 <- NA
zip_21$cnty_21 <- NA
zip_21$city_21 <- NA
zip_21$pop_21 <- NA
zip_21$dens_21 <- NA
zip_21$area_21 <- NA
zip_21$hous_21 <- NA
zip_21$occ_21 <- NA
zip_21$hval_21 <- NA
zip_21$ainc_21 <- NA
zip_21$urban_21 <- NA
# Loop through, filling the matrices with the correct metadata for
# each ZIP code and giving us some initial geographical info such as
# state, county, nearest big city, population, pop density, housing
# units, land area, median home value, median income, etc.
for (i in seq(1,2467,1)) {
this_zip <- str_pad(zip_20$survey...20.[i], width = 5, side = 'left', pad = '0')
metadata <- reverse_zipcode(this_zip)
zip_20$st_20[i] <- metadata$state
zip_20$cnty_20[i] <- metadata$county
zip_20$city_20[i] <- metadata$major_city
zip_20$pop_20[i] <- metadata$population
zip_20$dens_20[i] <- metadata$population_density
zip_20$area_20[i] <- metadata$land_area_in_sqmi
zip_20$hous_20[i] <- metadata$housing_units
zip_20$occ_20[i] <- metadata$occupied_housing_units
zip_20$hval_20[i] <- metadata$median_home_value
zip_20$ainc_20[i] <- metadata$median_household_income
# Consult our zip_descriptives sheet to find out whether or
# not this ZIP code resides in an 'urban' area (overlaps with
# any part of the United States' 'urban area' shapefile)
if(length(which(zip_info$zip == this_zip)) < 1) {
zip_20$urban_20[i] <- zip_info$urban[zip_info$zip == this_zip]
}
}
for (i in seq(1,2467,1)) {
this_zip <- str_pad(zip_21$survey...21.[i], width = 5, side = 'left', pad = '0')
metadata <- reverse_zipcode(this_zip)
zip_21$st_21[i] <- metadata$state
zip_21$cnty_21[i] <- metadata$county
zip_21$city_21[i] <- metadata$major_city
zip_21$pop_21[i] <- metadata$population
zip_21$dens_21[i] <- metadata$population_density
zip_21$area_21[i] <- metadata$land_area_in_sqmi
zip_21$hous_21[i] <- metadata$housing_units
zip_21$occ_21[i] <- metadata$occupied_housing_units
zip_21$hval_21[i] <- metadata$median_home_value
zip_21$ainc_21[i] <- metadata$median_household_income
# Consult our zip_descriptives sheet to find out whether or
# not this ZIP code resides in an 'urban' area (overlaps with
# any part of the United States' 'urban area' shapefile)
if(length(which(zip_info$zip == this_zip)) < 1) {
zip_21$urban_21[i] <- zip_info$urban[zip_info$zip == this_zip]
}
}
### ART SURVEY GEOGRAPHY INFO APPENDING SCRIPT ###
### MICHAEL HUFF ###
library(zipcodeR)
# Read in all of our data - the survey in its manipulated
# form (prepared stated pref section, dummy variables added,
# ZIP code stuff fixed and centroid points inserted), as well
# as ZIP data for whether or not a certain ZIP code is urban
# or rural. The rest of the ZIP code metadata is supplied by
# the zipcodeR package.
survey <- read.csv("C:/Users/micha/Desktop/dummy-centroids.csv")
zip_info <- read.csv("C:/Users/micha/Desktop/zips_descriptive.csv")
# If we don't do this here too, the comparison operation between
# CSV sheets will not complete.
zip_info$zip <- str_pad(zip_info$zip, width = 5, side = 'left', pad = '0')
# Pull out our existing ZIP code data.
zip_20 <- data.frame(survey[,21:23])
zip_21 <- data.frame(survey[,24:26])
# Assign more columns to each of these constructed matrices
# according to the ZIP-level metadata available through zipcodeR.
zip_20$st_20 <- NA
zip_20$cnty_20 <- NA
zip_20$city_20 <- NA
zip_20$pop_20 <- NA
zip_20$dens_20 <- NA
zip_20$area_20 <- NA
zip_20$hous_20 <- NA
zip_20$occ_20 <- NA
zip_20$hval_20 <- NA
zip_20$ainc_20 <- NA
zip_20$urban_20 <- NA
zip_21$st_21 <- NA
zip_21$cnty_21 <- NA
zip_21$city_21 <- NA
zip_21$pop_21 <- NA
zip_21$dens_21 <- NA
zip_21$area_21 <- NA
zip_21$hous_21 <- NA
zip_21$occ_21 <- NA
zip_21$hval_21 <- NA
zip_21$ainc_21 <- NA
zip_21$urban_21 <- NA
# Loop through, filling the matrices with the correct metadata for
# each ZIP code and giving us some initial geographical info such as
# state, county, nearest big city, population, pop density, housing
# units, land area, median home value, median income, etc.
for (i in seq(1,2467,1)) {
this_zip <- str_pad(zip_20$survey...20.[i], width = 5, side = 'left', pad = '0')
metadata <- reverse_zipcode(this_zip)
zip_20$st_20[i] <- metadata$state
zip_20$cnty_20[i] <- metadata$county
zip_20$city_20[i] <- metadata$major_city
zip_20$pop_20[i] <- metadata$population
zip_20$dens_20[i] <- metadata$population_density
zip_20$area_20[i] <- metadata$land_area_in_sqmi
zip_20$hous_20[i] <- metadata$housing_units
zip_20$occ_20[i] <- metadata$occupied_housing_units
zip_20$hval_20[i] <- metadata$median_home_value
zip_20$ainc_20[i] <- metadata$median_household_income
# Consult our zip_descriptives sheet to find out whether or
# not this ZIP code resides in an 'urban' area (overlaps with
# any part of the United States' 'urban area' shapefile)
if(length(which(zip_info$zip == this_zip)) >= 1) {
zip_20$urban_20[i] <- zip_info$urban[zip_info$zip == this_zip]
}
}
for (i in seq(1,2467,1)) {
this_zip <- str_pad(zip_21$survey...21.[i], width = 5, side = 'left', pad = '0')
metadata <- reverse_zipcode(this_zip)
zip_21$st_21[i] <- metadata$state
zip_21$cnty_21[i] <- metadata$county
zip_21$city_21[i] <- metadata$major_city
zip_21$pop_21[i] <- metadata$population
zip_21$dens_21[i] <- metadata$population_density
zip_21$area_21[i] <- metadata$land_area_in_sqmi
zip_21$hous_21[i] <- metadata$housing_units
zip_21$occ_21[i] <- metadata$occupied_housing_units
zip_21$hval_21[i] <- metadata$median_home_value
zip_21$ainc_21[i] <- metadata$median_household_income
# Consult our zip_descriptives sheet to find out whether or
# not this ZIP code resides in an 'urban' area (overlaps with
# any part of the United States' 'urban area' shapefile)
if(length(which(zip_info$zip == this_zip)) >= 1) {
zip_21$urban_21[i] <- zip_info$urban[zip_info$zip == this_zip]
}
}
View(zip_21)
survey <- cbind(survey[,1:20],zip_20,zip_21,survey[,27:ncol(survey)])
write.csv(survey, "C:/Users/micha/Desktop/art-geo.csv")
rm("metadata","zip_20","zip_21","zip_info","i")
rm("metadata","zip_20","zip_21","zip_info","i","this_zip")
